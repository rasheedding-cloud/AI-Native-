// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./ai-pm.db"
}

// 战略模型
model Strategy {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  kpis        Kpi[]
  initiatives Initiative[]

  @@map("strategies")
}

// 战役模型
model Initiative {
  id          String   @id @default(cuid())
  name        String
  description String?
  strategyId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  strategy    Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  projects    Project[]

  @@map("initiatives")
}

// 项目模型
model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  initiativeId String
  status      String   @default("PLANNING")  // PLANNING, IN_PROGRESS, COMPLETED, ON_HOLD, CANCELLED
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  initiative  Initiative        @relation(fields: [initiativeId], references: [id], onDelete: Cascade)
  tasks       Task[]
  taskLists   TaskList[]
  dependencies TaskDependency[]

  @@map("projects")
}

// 任务列表模型
model TaskList {
  id          String   @id @default(cuid())
  projectId   String
  name        String
  sortOrder   Int      @default(0)
  isArchived  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks       Task[]

  @@map("task_lists")
}

// 任务模型
model Task {
  id            String    @id @default(cuid())
  title         String
  description   String?
  projectId     String
  listId        String?
  assignee      String?
  priority      Float     @default(0.0)
  estimate      Int?      // 预估时间（小时）
  startDate     DateTime?
  endDate       DateTime?
  due           DateTime?
  progress      Int       @default(0)  // 0-100的进度百分比
  status        String    @default("TODO")  // TODO, DOING, DONE, BLOCKED
  dependencies  String?   // JSON格式存储依赖任务ID数组
  kpiLinks      String?   // JSON格式存储关联的KPI数组
  riskFlags     String?   // JSON格式存储风险标记数组
  aiReasoning   String?   // AI建议理由
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  project       Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  list          TaskList?  @relation(fields: [listId], references: [id], onDelete: SetNull)
  subtasks      Subtask[]
  predecessors  TaskDependency[] @relation("TaskDependencySuccessor")
  successors    TaskDependency[] @relation("TaskDependencyPredecessor")
  calendarBlocks CalendarBlock[]

  @@map("tasks")
}

// 任务依赖关系模型
model TaskDependency {
  id                    String   @id @default(cuid())
  projectId             String
  predecessorTaskId     String
  successorTaskId       String
  type                  String   @default("FS")  // FS (Finish-to-Start)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  project               Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  predecessorTask       Task      @relation("TaskDependencySuccessor", fields: [predecessorTaskId], references: [id], onDelete: Cascade)
  successorTask         Task      @relation("TaskDependencyPredecessor", fields: [successorTaskId], references: [id], onDelete: Cascade)

  @@unique([predecessorTaskId, successorTaskId])
  @@map("task_dependencies")
}

// 子任务模型
model Subtask {
  id          String    @id @default(cuid())
  title       String
  description String?
  taskId      String
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("subtasks")
}

// KPI模型
model Kpi {
  id          String   @id @default(cuid())
  name        String
  target      Float
  current     Float    @default(0.0)
  strategyId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  strategy    Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)

  @@map("kpis")
}

// 日历时间块模型
model CalendarBlock {
  id            String    @id @default(cuid())
  taskId        String
  userId        String?   // 分配给的用户
  title         String
  description   String?
  startTime     DateTime
  endTime       DateTime
  status        String    @default("PLANNED")  // PLANNED, IN_PROGRESS, COMPLETED, CANCELLED
  priority      Int       @default(50)  // 1-100的优先级
  progress      Int       @default(0)  // 0-100的进度百分比
  isRecurring   Boolean   @default(false)
  recurringRule String?   // 重复规则，JSON格式
  aiReasoning   String?   // AI调度理由
  conflictLevel String    @default("NONE")  // NONE, LOW, MEDIUM, HIGH
  conflictInfo  String?   // JSON格式存储冲突信息
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  task          Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("calendar_blocks")
}

// 合规风险记录
model ComplianceRisk {
  id          String   @id @default(cuid())
  entityType  String   // task, project, initiative
  entityId    String
  sensitiveWords String? // JSON格式存储敏感词数组
  riskLevel   String   @default("LOW")  // LOW, MEDIUM, HIGH
  suggestions String?  // JSON格式存储建议数组
  createdAt   DateTime @default(now())

  @@map("compliance_risks")
}
